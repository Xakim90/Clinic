{"version":3,"sources":["components/Forms/RegClient.module.css","components/Auth/Signin.module.css","components/Content/ContentComponents/ContentMain.module.css","serviceWorker.js","components/Profile/Profile.jsx","components/Menu/ProfileMenu.js","components/Table/TableMaterial.jsx","components/Progress/LinearIndeterminate.jsx","actions/api.js","components/Table/Table.jsx","components/Modal/SimpleModal.jsx","components/Content/ContentComponents/ContentMain.jsx","components/Content/Content.jsx","history.js","actions/actions.js","components/Auth/Signin.js","components/Home/Home.jsx","components/Test/Clock.jsx","components/Forms/RegClient.jsx","components/Auth/Signup.js","components/Menu/NestedLists.js","components/Test/Example1.jsx","components/Test/ExampleMain.jsx","components/Menu/ResponsiveMenu.jsx","redux/auth.js","redux/clientsReducer.js","redux/redux-store.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Profile","React","Component","render","StyledMenu","withStyles","paper","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","ProfileMenu","useState","anchorEl","setAnchorEl","ListItemIcon","onClick","event","currentTarget","className","fontSize","id","keepMounted","open","onClose","ListItemText","logout","TableMaterial","rowAdd","newData","this","clientPostFetch","rowUpdate","updateClient","rowDelete","removeClient","title","data","clients","columns","field","type","lookup","1","10","20","25","30","40","50","60","70","75","80","85","90","95","options","selection","actions","icon","SaveIcon","tooltip","rowData","alert","name","icons","Search","SearchIcon","ResetSearch","ClearIcon","Edit","EditIcon","Delete","DeleteForeverIcon","Save","Cancel","CancelIcon","Check","CheckBoxIcon","Clear","FirstPage","FirstPageIcon","LastPage","LastPageIcon","PreviousPage","ChevronLeftIcon","NextPage","ChevronRightIcon","Add","AddBoxIcon","SortArrow","ArrowUpwardIcon","editable","onRowAdd","Promise","resolve","reject","onRowUpdate","oldData","tableData","onRowDelete","dataDelete","index","_id","splice","useStyles","makeStyles","width","marginTop","spacing","LinearIndeterminate","classes","LinearProgress","instance","axios","baseURL","headers","Accept","loginUser","user","payload","loadClients","client","myData","errors","console","log","usersAPI","userPostFetch","dispatch","a","post","response","localStorage","setItem","token","history","go","userLoginFetch","status","document","getElementById","innerHTML","getProfileFetch","get","Authorization","message","removeItem","clientAPI","getClientsFetch","params","delete","put","Table","componentDidMount","initialized","loaded","TableContainer","compose","withRouter","connect","state","clientsReducer","authReducer","clientInfo","position","background","border","boxShadow","shadows","padding","getElementsByTagName","isOpen","ContentMain","constructor","super","submit","e","preventDefault","clearState","handleChange","setState","clientData","target","value","setClientHistory","getAttribute","map","surname","birthYear","birthCity","undefined","isNotEmptyHistory","setOpen","handleClose","styles","cardHeight","patient","key","data-id","onSubmit","TextareaAutosize","onChange","aria-label","rowsMin","placeholder","Button","variant","size","startIcon","ContentContainer","Content","createBrowserHistory","url","Signin","email","password","onInputChange","onInputSubmit","TextField","label","autoComplete","errorDiv","to","userInfo","Clock","date","Date","timerID","setInterval","tick","componentWillUnmount","clearInterval","toLocaleTimeString","RegClient","complaint","change","fetch","method","body","JSON","stringify","then","resp","json","Signup","username","role","maxWidth","nested","paddingLeft","links","href","sublinks","NestedList","List","component","aria-labelledby","subheader","ListSubheader","link","ListItem","button","activeStyle","fontWeight","Collapse","in","timeout","unmountOnExit","disablePadding","sublink","Example1","count","componentDidUpdate","ExampleMain","drawerWidth","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveMenu","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","container","CssBaseline","AppBar","Toolbar","IconButton","edge","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","xsDown","exact","path","Home","initialState","currentUser","reducers","combineReducers","form","formReducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","_store_","App","logoutUser","AppContainer","ClinicApp","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3487f4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"RegClient_label__1Jcw6\",\"errorDiv\":\"RegClient_errorDiv__3sMYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Signin_label__2YL6_\",\"errorDiv\":\"Signin_errorDiv__mLdYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeight\":\"ContentMain_cardHeight__BzuEq\",\"miniCardHeight\":\"ContentMain_miniCardHeight__DxZMB\",\"card-body\":\"ContentMain_card-body__2B8RO\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <h1>PROFILE PAGE</h1>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    // border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function ProfileMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItemIcon onClick={handleClick} className=\"cursor-pointer\">\r\n        <AccountCircleIcon\r\n          fontSize=\"large\"\r\n          color=\"inherit\"\r\n        />\r\n      </ListItemIcon>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <AccountCircleIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Профиль\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <DraftsIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Настройки\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={props.logout}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Выйти\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nclass TableMaterial extends React.Component {\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.children !== this.props.children) {\r\n  //   }\r\n  // }\r\n  rowAdd = (newData) => {\r\n    this.props.clientPostFetch(newData);\r\n  };\r\n  rowUpdate = (newData) => {\r\n    this.props.updateClient(newData);\r\n  };\r\n  rowDelete = (id) => {\r\n    this.props.removeClient(id);\r\n  };\r\n  render() {\r\n    return (\r\n      <MaterialTable\r\n        title=\"Таблица пациентов\"\r\n        data={this.props.clients}\r\n        columns={[\r\n          { title: 'Имя', field: 'name' },\r\n          { title: 'Фамилия', field: 'surname' },\r\n          { title: 'Статус', field: 'status' },\r\n          { title: 'Год рождения', field: 'birthYear', type: 'numeric' },\r\n          {\r\n            title: 'Место проживания',\r\n            field: 'birthCity',\r\n            lookup: {\r\n              1: 'Ташкент',\r\n              10: 'Ташкентская область',\r\n              20: 'Сырдарьинская область',\r\n              25: 'Джизакская область',\r\n              30: 'Самаркандская область',\r\n              40: 'Ферганская область',\r\n              50: 'Наманганская область',\r\n              60: 'Андижанская область',\r\n              70: 'Кашкадарьинская область',\r\n              75: 'Сурхандарьинская область',\r\n              80: 'Бухарская область',\r\n              85: 'Навоийская область',\r\n              90: 'Хорезмская область',\r\n              95: 'Республика Каракалпакстан',\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          selection: true,\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: SaveIcon,\r\n            tooltip: 'Save User',\r\n            onClick: (event, rowData) => alert('You saved ' + rowData.name),\r\n          },\r\n        ]}\r\n        icons={{\r\n          Search: SearchIcon,\r\n          ResetSearch: ClearIcon,\r\n          Edit: EditIcon,\r\n          Delete: DeleteForeverIcon,\r\n          Save: SaveIcon,\r\n          Cancel: CancelIcon,\r\n          Check: CheckBoxIcon,\r\n          Clear: ClearIcon,\r\n          FirstPage: FirstPageIcon,\r\n          LastPage: LastPageIcon,\r\n          PreviousPage: ChevronLeftIcon,\r\n          NextPage: ChevronRightIcon,\r\n          Add: AddBoxIcon,\r\n          SortArrow: ArrowUpwardIcon,\r\n        }}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve, reject) => {\r\n              resolve();\r\n              this.rowAdd(newData);\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              const dataUpdate = [...this.props.clients];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              resolve();\r\n              this.rowUpdate(newData);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              const dataDelete = [...this.props.clients];\r\n              const index = oldData.tableData.id;\r\n              const _id = oldData._id;\r\n              dataDelete.splice(index, 1);\r\n              resolve();\r\n              this.rowDelete(_id);\r\n            }),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableMaterial;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import * as axios from 'axios';\n\n// const url = 'http://localhost:8080';\nconst url = \"\";\n\nconst instance = axios.create({\n  baseURL: `${url}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n});\n\nconst loginUser = (user) => ({\n  type: 'INITIALIZED_SUCCESS',\n  payload: user,\n});\n\nconst loadClients = (client) => ({\n  type: 'LOADED_SUCCESS',\n  payload: client,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOG_OUT',\n});\n\nconst myData = {\n  authError: function (data) {\n    if (data.errors) {\n      document.getElementById('errorDiv').innerHTML = 'wrong email or password';\n    }\n  },\n  setToken: (data) => {\n    if (data.user) {\n      localStorage.setItem('token', data.user.token);\n      dispatch(loginUser(data.user));\n      window.history.go(-1);\n    }\n  },\n  dataUser: (data) => {\n    if (data.message) {\n      localStorage.removeItem('token');\n    } else if (data.user) {\n      dispatch(loginUser(data.user));\n    }\n  },\n  dataMessage: (data) => {\n    if (data.message) {\n      console.log(data.message);\n    }\n  },\n  dispatchClient: (data) => {\n    if (data) {\n      dispatch(loadClients(data));\n    }\n  },\n  clientError: (data) => {\n    if (data.errors) {\n      console.log(data.errors);\n    }\n  },\n};\n\nexport const usersAPI = {\n  \n  userPostFetch(user) {\n    return async (dispatch) => {\n      let response = await instance.post('users', {\n        user: user,\n      });\n      if (response.data.user) {\n        localStorage.setItem('token', response.data.user.token);\n        dispatch(loginUser(response.data.user));\n        window.history.go(-2);\n      } \n    };\n  },\n\n  userLoginFetch(user) {\n    return async (dispatch) => {\n      let response = await instance.post('users/login', {\n        user:  user,\n      })\n      if (response.status === 200) {\n        localStorage.setItem('token', response.data.user.token);\n        dispatch(loginUser(response.data.user));\n        window.history.go(-1);\n      }\n      \n      if ( response.data.errors) {\n        document.getElementById('errorDiv').innerHTML =\n          'wrong email or password';\n      }\n    };\n  },\n\n  getProfileFetch() {\n    return async (dispatch) => {\n      const token = localStorage.token;\n      if (token) {\n        let response = await instance.get('users/auth', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.status === 200) {\n          dispatch(loginUser(response.data.user));\n        }\n        if (response.message) {\n          localStorage.removeItem('token');\n        } else {\n          myData.clientError(response.data);\n        }\n      }\n    };\n  },\n};\n\nexport const clientAPI = {\n  getClientsFetch() {\n    return async (dispatch) => {\n      let response = await instance.get('clients');\n      if (response.status === 200) {\n        dispatch(loadClients(response.data));\n      } else {\n        myData.clientError(response.data);\n      }\n    };\n  },\n\n  clientPostFetch(client) {\n    return async (dispatch) => {\n      let response = await instance.post('clients', {\n        params: client,\n      });\n      if (response.status === 200) {\n        dispatch(this.getClientsFetch());\n      } else {\n        myData.clientError(response.data);\n      }\n    };\n  },\n\n  removeClient(id) {\n    return async (dispatch) => {\n      let response = await instance.delete(`clients/${id}`);\n      if (response.status === 200) {\n        dispatch(this.getClientsFetch());\n      } else {\n        myData.clientError(response.data);\n      }\n    };\n  },\n\n  updateClient(newData) {\n    return async (dispatch) => {\n      let response = await instance.put('clients', {\n        params: newData,\n      });\n      if (response.status === 200) {\n        dispatch(this.getClientsFetch());\n      } else {\n        myData.clientError(response.data);\n      }\n    };\n  },\n};\n","import React from 'react';\r\nimport TableMaterial from './TableMaterial';\r\nimport LinearIndeterminate from '../Progress/LinearIndeterminate';\r\nimport { clientAPI } from '../../actions/api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.getClientsFetch();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.initialized ? (\r\n          null\r\n          // window.history.pushState({ foo: 'bar' }, 'Signin', '/signin')\r\n        ) : (\r\n          <>\r\n            {!this.props.loaded ? (\r\n              <LinearIndeterminate />\r\n            ) : (\r\n              <TableMaterial\r\n                clientPostFetch={this.props.clientPostFetch}\r\n                getClientsFetch={this.props.getClientsFetch}\r\n                removeClient={this.props.removeClient}\r\n                updateClient={this.props.updateClient}\r\n                clients={this.props.clients}\r\n              />  \r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  clients: state.clientsReducer.clients,\r\n  loaded: state.clientsReducer.loaded,\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getClientsFetch: () => dispatch(clientAPI.getClientsFetch()),\r\n  clientPostFetch: (clientInfo) => dispatch(clientAPI.clientPostFetch(clientInfo)),\r\n  removeClient: (id) => dispatch(clientAPI.removeClient(id)),\r\n  updateClient: (newData) => dispatch(clientAPI.updateClient(newData)),\r\n});\r\n\r\nconst TableContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Table);\r\n\r\n\r\nexport default TableContainer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p>\r\n      <SimpleModal />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContentMain.module.css';\r\nimport LinearIndeterminate from '../../Progress/LinearIndeterminate';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { clientAPI } from '../../../actions/api';\r\nimport SimpleModal from '../../Modal/SimpleModal';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nlet body = document.getElementsByTagName('body');\r\nlet isNotEmptyHistory = false;\r\nlet isOpen = false;\r\n\r\nclass ContentMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      surname: '',\r\n      status: '',\r\n      birthYear: '',\r\n      birthCity: '',\r\n      clientData: [\r\n        {\r\n          history: '',\r\n        },\r\n      ],\r\n      _id: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getClientsFetch();\r\n  }\r\n\r\n  clearState() {\r\n    this.setState({\r\n      name: '',\r\n      surname: '',\r\n      status: '',\r\n      birthYear: '',\r\n      birthCity: '',\r\n      clientData: [{ history: '' }],\r\n      _id: '',\r\n    });\r\n  }\r\n  submit = (e) => {\r\n    e.preventDefault();\r\n    this.props.updateClient(this.state);\r\n    this.clearState();\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      clientData: [\r\n        {\r\n          history: e.target.value,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  setClientHistory = (e) => {\r\n    e.preventDefault();\r\n    let clients = this.props.clients;\r\n    let id = e.currentTarget.getAttribute('data-id');\r\n    clients.map((client, index) => {\r\n      if (client._id === id) {\r\n        this.setState({\r\n          name: client.name,\r\n          surname: client.surname,\r\n          status: client.status,\r\n          birthYear: client.birthYear,\r\n          birthCity: client.birthCity,\r\n          clientData: client.clientData,\r\n          _id: client._id,\r\n        });\r\n        if (client.clientData[0] !== undefined) {\r\n          this.isNotEmptyHistory = true;\r\n        }\r\n      }\r\n    });\r\n  };\r\n  setOpen = () => {\r\n    isOpen = true;\r\n    // console.log(isOpen)\r\n  };\r\n  handleClose = () => {\r\n    isOpen = false;\r\n    // console.log(isOpen);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.props.initialized ? null : (\r\n          // window.history.pushState({ foo: 'bar' }, 'Signin', '/signin')\r\n          <>\r\n            {!this.props.loaded ? (\r\n              <LinearIndeterminate />\r\n            ) : (\r\n              <>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <div className={styles.cardHeight + ' card mt-2 mb-1'}>\r\n                      <div className=\"card-header text-lg py-1 font-weight-bolder\">\r\n                        Выберите пациента для просмотра и изменения истории\r\n                        болезней:\r\n                      </div>\r\n                      <div className=\"card-body overflow-auto mb-2\">\r\n                        {this.props.clients.map((patient, index) => (\r\n                          <p\r\n                            key={index}\r\n                            data-id={patient._id}\r\n                            onClick={(e) => this.setClientHistory(e)}\r\n                            className=\"font-weight-bolder text-base cursor-pointer hover:text-red-500\"\r\n                          >\r\n                            {patient.name + ' ' + patient.surname}\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <div className={styles.cardHeight + ' card mt-2 mb-1'}>\r\n                      <div className=\"card-header py-1 text-lg font-weight-bolder\">\r\n                        История болезни пациента\r\n                      </div>\r\n                      <div className=\"card-body overflow-auto\">\r\n                        {this.state.name === '' ? null : (\r\n                          <span className=\"font-weight-bolder text-lg text-red-500\">\r\n                            Пациент:{' '}\r\n                          </span>\r\n                        )}\r\n                        <span\r\n                          className=\"font-weight-bolder text-base\"\r\n                          id=\"currentClient\"\r\n                        >\r\n                          {this.isNotEmptyHistory\r\n                            ? this.state.name + ' ' + this.state.surname\r\n                            : null}\r\n                        </span>\r\n                        <br />\r\n                        <p\r\n                          className=\"font-weight-bolder text-base\"\r\n                          id=\"currentClientHistory\"\r\n                        >\r\n                          {this.isNotEmptyHistory\r\n                            ? this.state.clientData[0].history\r\n                            : null}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 bordered\">\r\n                    <div className={styles.cardHeight + ' card mt-2 mb-1'}>\r\n                      <div className=\"card-header py-1 font-weight-bolder text-lg\">\r\n                        Новое назначение\r\n                      </div>\r\n                      <div className=\"card-body overflow-auto\">\r\n                        {this.state.name === '' ? null : (\r\n                          <span className=\"text-lg font-weight-bolder text-red-500\">\r\n                            Диагноз для пациента -{' '}\r\n                          </span>\r\n                        )}\r\n                        <span\r\n                          className=\"font-weight-bolder text-base\"\r\n                          id=\"diagnos\"\r\n                        >\r\n                          {this.state.name + ' ' + this.state.surname}\r\n                        </span>\r\n                        <form onSubmit={this.submit}>\r\n                          {this.state.name !== '' ? (\r\n                            <>\r\n                              <TextareaAutosize\r\n                                name=\"history\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.clientData[0].history}\r\n                                className=\"w-full\"\r\n                                aria-label=\"minimum height\"\r\n                                rowsMin={3}\r\n                                placeholder=\"Введите текст\"\r\n                              />\r\n                              <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                              >\r\n                                Сохранить\r\n                              </Button>\r\n                            </>\r\n                          ) : null}\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  clients: state.clientsReducer.clients,\r\n  loaded: state.clientsReducer.loaded,\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getClientsFetch: () => dispatch(clientAPI.getClientsFetch()),\r\n  updateClient: (newData) => dispatch(clientAPI.updateClient(newData)),\r\n});\r\n\r\nconst ContentContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(ContentMain);\r\n\r\nexport default ContentContainer;\r\n","import React from 'react';\r\nimport ContentContainer from './ContentComponents/ContentMain';\r\n\r\nclass Content extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <ContentContainer/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import history from '../history';\r\n\r\nconst url = \"http://localhost:8080\"\r\n// const url = \"\"\r\n\r\nconst loginUser = user => ({\r\n  type: 'INITIALIZED_SUCCESS',\r\n  payload: user\r\n})\r\n\r\nconst loadClients = client => ({\r\n  type: 'LOADED_SUCCESS',\r\n  payload: client\r\n})\r\n\r\nexport const logoutUser = () => ({\r\n  type: 'LOG_OUT'\r\n});\r\n// export const logout = () => {\r\n//   return (dispatch) => {\r\n//     logoutUser();\r\n//     localStorage.removeItem('token');\r\n//   };\r\n// };\r\n\r\nexport const userPostFetch = user => {\r\n  return dispatch => {\r\n    return fetch(`${url}/api/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({ user }),\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        if (data.errors !== undefined) {\r\n          var errorKey = Object.keys(data.errors); //получаем ключи объекта в виде массива\r\n          document.getElementById(\"signupErrorDiv\").innerHTML = errorKey[0] + \" \" + data.errors[errorKey[0]];\r\n        }\r\n        if (data.message !== undefined) {\r\n          console.log(\"data.message\")\r\n        }\r\n        if (data.user !== undefined) {\r\n          localStorage.setItem(\"token\", data.user.token);\r\n          dispatch(loginUser(data.user));\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const userLoginFetch = user => {\r\n  return dispatch => {\r\n    return fetch(`${url}/api/users/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({ user }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          document.getElementById('errorDiv').innerHTML =\r\n            'wrong email or password';\r\n        }\r\n        if (data.user) {\r\n          localStorage.setItem('token', data.user.token);\r\n          dispatch(loginUser(data.user));\r\n          window.history.go(-1);\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n  return dispatch => {\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return fetch(`${url}/api/users/auth`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          if (data.message) {\r\n            // Будет ошибка если token не дествительный\r\n            localStorage.removeItem('token');\r\n          } else if (data.user !== undefined && data.user !== null) {\r\n            dispatch(loginUser(data.user));\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport const getClientsFetch = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return fetch(`${url}/api/clients`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          if (data.message) {\r\n            // Будет ошибка если token не дествительный\r\n            // localStorage.removeItem('token');\r\n          } else if (data !== undefined && data !== null) {\r\n            dispatch(loadClients(data));\r\n          }\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const clientPostFetch = (client) => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/api/clients`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({ client }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data.message !== undefined) {\r\n          console.log('data.message');\r\n        }\r\n        if (data !== undefined) {\r\n          dispatch(loadClients(data.client));\r\n        }\r\n        if (data.errors !== undefined) {\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const removeClient = (id) => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/api/clients`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        debugger\r\n        if (data.message !== undefined) {\r\n          console.log('data.message');\r\n        }\r\n        if (data !== undefined) {\r\n          debugger\r\n          dispatch(loadClients(data.client));\r\n        }\r\n        if (data.errors !== undefined) {\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateClient = ( newData ) => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/api/clients`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify(newData),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data.message !== undefined) {\r\n          console.log('data.message');\r\n        }\r\n        if (data !== undefined) {\r\n        }\r\n        if (data.errors !== undefined) {\r\n        }\r\n      });\r\n  };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userLoginFetch } from '../../actions/actions';\r\nimport styles from './Signin.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { usersAPI } from '../../actions/api'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  onInputSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.userLoginFetch(this.state)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid grid-cols-1 gap-12\">\r\n        <form onSubmit={this.onInputSubmit}>\r\n          <h1>Вход</h1>\r\n          <br/>\r\n          <span>Вы можете ввести email:admin@gmail.com и пароль:admin чтобы войти и протестировать систему!</span>\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            autoComplete=\"current-email\"\r\n            variant=\"outlined\"\r\n            value={this.state.email}\r\n            onChange={this.onInputChange}\r\n            size=\"small\"\r\n            name=\"email\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"outlined\"\r\n            value={this.state.password}\r\n            onChange={this.onInputChange}\r\n            size=\"small\"\r\n            name=\"password\"\r\n          />\r\n          <div className=\"col-6\">\r\n            <div id=\"errorDiv\" className={styles.errorDiv}></div>\r\n          </div>\r\n          <br />\r\n          <input type=\"submit\" className=\"btn btn-sm btn-light\" />\r\n        </form>\r\n        <div>\r\n          <b>У вас еще нет аккаунта? тогда: </b>\r\n          <Link to=\"/signup\" className=\"btn btn-sm btn-light\">\r\n            Зарегистрируйтесь\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userLoginFetch: userInfo => dispatch(usersAPI.userLoginFetch(userInfo))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Signin);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Link to=\"/test\">To Test page</Link>\r\n        <h1>Это страница еще не готова</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date(),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Привет, мир!</h1>\r\n        <h2>Сейчас {this.state.date.toLocaleTimeString()}.</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { clientPostFetch } from '../../actions/actions';\r\nimport styles from './RegClient.module.css';\r\n\r\nclass RegClient extends Component {\r\n  state = {\r\n    name: '',\r\n    surname: '',\r\n    complaint: '',\r\n    history: '',\r\n  };\r\n\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  clearState() {\r\n    this.setState({ name: '', surname: '', complaint: '', history: '' });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n    this.props.clientPostFetch(this.state);\r\n    this.clearState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-col md:flex-row\">\r\n        <form onSubmit={this.submit}>\r\n          <h1>Регистрация нового пациента</h1>\r\n\r\n          <label className={styles.label}>Имя</label>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"Имя\"\r\n            value={this.state.name}\r\n            onChange={this.change}\r\n          />\r\n          <br />\r\n\r\n          <label className={styles.label}>Фамилия</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Фамилия\"\r\n            placeholder=\"surname\"\r\n            value={this.state.surname}\r\n            onChange={this.change}\r\n          />\r\n          <br />\r\n\r\n          <label className={styles.label}>Жалобы</label>\r\n          <textarea\r\n            name=\"complaint\"\r\n            placeholder=\"Жалобы\"\r\n            value={this.state.complaint}\r\n            onChange={this.change}\r\n          />\r\n          <br />\r\n\r\n          <label className={styles.label}>История болезни:</label>\r\n          <textarea\r\n            placeholder=\"История болезни\"\r\n            value={this.state.history}\r\n            name=\"history\"\r\n            onChange={this.change}\r\n          />\r\n          <br />\r\n          <div className=\"col-md-6\">\r\n            <p id=\"signupErrorDiv\" className={styles.errorDiv}></p>\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-sm btn-light\" />\r\n        </form>\r\n        <br />\r\n        <div className=\"signup\">\r\n          <Link to=\"/table\" className=\"btn btn-sm btn-light\">\r\n            Просмотреть таблицу всех клиентов\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clientPostFetch: (clientInfo) => dispatch(clientPostFetch(clientInfo)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegClient);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userPostFetch } from '../../actions/actions';\r\nimport { usersAPI } from '../../actions/api';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styles from './Signin.module.css'\r\n\r\nclass Signup extends Component {\r\n\r\n  state = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    role: '',\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });;\r\n  }\r\n\r\n  clearState() {\r\n    this.setState({ username: \"\", email: \"\", password: \"\", role: \"\" });\r\n  }\r\n\r\n\r\n  submit = event => {\r\n    event.preventDefault();\r\n    this.props.userPostFetch(this.state);\r\n    this.clearState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid grid-cols-1 gap-12\">\r\n        <form onSubmit={this.submit}>\r\n          <h1>Регистрация</h1>\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-email-input-01\"\r\n            label=\"Имя\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n            size=\"small\"\r\n            name=\"username\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-email-input-02\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            autoComplete=\"current-email\"\r\n            variant=\"outlined\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            size=\"small\"\r\n            name=\"email\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"outlined\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            size=\"small\"\r\n            name=\"password\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <select\r\n            value={this.state.role}\r\n            className=\"border py-2 px-2\"\r\n            name=\"role\"\r\n            onChange={this.handleChange}\r\n          >\r\n            <option>Выберите вашу роль в системе:</option>\r\n            <option className=\"border py-2 px-3\" value=\"admin\">\r\n              admin\r\n            </option>\r\n            <option value=\"operator\">operator</option>\r\n            <option value=\"client\">client</option>\r\n          </select>\r\n          <br />\r\n          <div className=\"col-md-6\">\r\n            <p id=\"signupErrorDiv\" className={styles.errorDiv}></p>\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-sm btn-light\" />\r\n        </form>\r\n        <div className=\"signup\">\r\n          <b>У вас уже есть аккаунт? тогда: </b>\r\n          <Link to=\"/signin\" className=\"btn btn-sm btn-light\">\r\n            Войдите\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  userPostFetch: userInfo => dispatch(usersAPI.userPostFetch(userInfo))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst links = [\r\n  {\r\n    title: 'Домашняя страница',\r\n    href: '/home',\r\n    icon: <HomeIcon />,\r\n  },\r\n  {\r\n    title: 'Таблица пациентов',\r\n    href: '/table',\r\n    icon: <LocalHospitalIcon />,\r\n  },\r\n  {\r\n    title: 'Данные пациентов',\r\n    href: '/content',\r\n    icon: <AccessibilityIcon />,\r\n  },\r\n];\r\nconst sublinks = [\r\n  {\r\n    title: 'Профиль',\r\n    href: '/profile',\r\n    icon: <StarBorder />,\r\n  },\r\n];\r\n\r\nexport default function NestedList(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Menu\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      {links.map((link, index) => (\r\n        <ListItem key={index} button>\r\n          <ListItemIcon>{link.icon}</ListItemIcon>\r\n          <NavLink\r\n            to={link.href}\r\n            activeStyle={{\r\n              fontWeight: 'bold',\r\n              color: 'red',\r\n            }}\r\n          >\r\n            {link.title}{' '}\r\n          </NavLink>\r\n        </ListItem>\r\n      ))}\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n        <ListItemText primary=\"Дополнительно\" />\r\n      </ListItem>\r\n\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {sublinks.map((sublink, index) => (\r\n            <ListItem key={index} button className={classes.nested}>\r\n              <ListItemIcon>{sublink.icon}</ListItemIcon>\r\n              <Link to={sublink.href}>{sublink.title}</Link>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = `Вы нажали ${this.state.count} раз`;\r\n    console.log('componentDidMount');\r\n  }\r\n  componentDidUpdate() {\r\n    document.title = `Вы najali ${this.state.count} раз`;\r\n    console.log('componentDidUpdate');\r\n  }\r\n  componentWillUnmount() {\r\n    document.title = `Siz ${this.state.count} marta bosdingiz`;\r\n    console.log('componentWillUnmount');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Вы нажали {this.state.count} раз</p>\r\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\r\n          Нажми на меня\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Example1;\r\n","import React from 'react';\r\nimport Clock from './Clock';\r\nimport Example1 from './Example1';\r\n\r\nclass ExampleMain extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"flex\">\r\n          <Clock />\r\n          <Example1 />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExampleMain;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Profile from '../../components/Profile/Profile';\r\nimport ProfileMenu from '../../components/Menu/ProfileMenu';\r\nimport TableContainer from '../../components/Table/Table';\r\nimport Content from '../../components/Content/Content';\r\nimport Signin from '../../components/Auth/Signin';\r\nimport Home from '../../components/Home/Home';\r\nimport Clock from '../../components/Test/Clock';\r\nimport RegClient from '../../components/Forms/RegClient';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Signup from '../../components/Auth/Signup';\r\nimport { BrowserRouter, Redirect, Route, withRouter } from 'react-router-dom';\r\nimport NestedLists from './NestedLists';\r\nimport ExampleMain from '../Test/ExampleMain';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveMenu(props) {\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const drawer = (\r\n    <div className={classes.toolbar}>\r\n      <NestedLists />\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className=\"md:flex justify-end\">\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n        color=\"secondary\"\r\n      >\r\n        <Toolbar className=\"md:flex justify-end\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {props.initialized ? (\r\n            <ProfileMenu logout={props.logout} />\r\n          ) : (\r\n            <div>\r\n              <Link\r\n                to=\"/signin\"\r\n                className=\"btn btn-sm text-deeppink float-right btn-light\"\r\n              >\r\n                Вход\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n          {/* {!props.initialized ? (\r\n            <Signin />\r\n          ) : (\r\n              <TableContainer />\r\n            )} */}\r\n        </Route>\r\n        <Route exact path=\"/signin\">\r\n          <Signin />\r\n        </Route>\r\n\r\n        <Route exact path=\"/signup\">\r\n          <Signup />\r\n        </Route>\r\n\r\n        <Route path=\"/content\">\r\n          <Content />\r\n        </Route>\r\n\r\n        <Route exact path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n\r\n        <Route exact path=\"/table\">\r\n          <TableContainer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/regclient\">\r\n          <RegClient />\r\n        </Route>\r\n\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/test\">\r\n          <ExampleMain />\r\n        </Route>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveMenu.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveMenu;\r\n","const initialState = {\r\n    currentUser: {},\r\n    initialized: false,\r\n  }\r\n  \r\n  export default function authReducer(state = initialState, action) {\r\n      switch (action.type) {\r\n        case 'INITIALIZED_SUCCESS':\r\n          return {\r\n            ...state, \r\n            currentUser: action.payload,\r\n            initialized: true\r\n\r\n          }\r\n        case 'LOG_OUT':\r\n          return {\r\n            ...state,\r\n            currentUser: {},\r\n            initialized: false,\r\n\r\n          }\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    }","const initialState = {\r\n    clients: [],\r\n    loaded: false\r\n  }\r\n  \r\n  export default function clientsReducer(state = initialState, action) {\r\n      switch (action.type) {\r\n        case 'LOADED_SUCCESS':\r\n          return {\r\n            ...state,\r\n            clients: action.payload,\r\n            loaded: true,\r\n          };\r\n        case 'REMOVE_LOADED_CLIENTS':\r\n          return {\r\n            ...state,\r\n            clients: [],\r\n            loaded: false,\r\n          };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    }","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport authReducer from \"./auth\";\r\nimport clientsReducer from \"./clientsReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n    clientsReducer: clientsReducer,\r\n    authReducer: authReducer\r\n});\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare) // redux-dev tools o'rnatilgan store\r\n    // const store = createStore(reducer, /* preloadedState, */ compose(\r\n\r\n));\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare)); o'zimiz yozgan store\r\nwindow._store_ = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ResponsiveMenu from './components/Menu/ResponsiveMenu';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport store from './redux/redux-store';\r\nimport { createBrowserHistory } from 'history';\r\nimport { BrowserRouter,withRouter } from 'react-router-dom';\r\n// import { getProfileFetch } from './actions/actions';\r\nimport { logoutUser } from './actions/api';\r\nimport {usersAPI} from './actions/api'\r\nconst history = createBrowserHistory();\r\n// const location = history.location;\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getProfileFetch();\r\n  }\r\n  logout = (event) => {\r\n    event.preventDefault();\r\n    localStorage.removeItem('token');\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <ResponsiveMenu\r\n        initialized={this.props.initialized}\r\n        logout={this.logout}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.authReducer.currentUser,\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getProfileFetch: () => dispatch(usersAPI.getProfileFetch()),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n});\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(App);\r\n\r\nconst ClinicApp = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default ClinicApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ClinicApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <ClinicApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}